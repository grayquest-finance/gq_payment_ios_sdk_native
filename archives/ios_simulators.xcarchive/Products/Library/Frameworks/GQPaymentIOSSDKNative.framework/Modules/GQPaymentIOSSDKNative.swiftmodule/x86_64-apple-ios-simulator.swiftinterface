// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name GQPaymentIOSSDKNative
// swift-module-flags-ignorable: -enable-bare-slash-regex
import DeveloperToolsSupport
import Foundation
@_exported import GQPaymentIOSSDKNative
import OSLog
import RegexBuilder
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
final public class GQPayment {
  public static var themeColor: UIKit.UIColor
  final public var delegate: (any GQPaymentIOSSDKNative.GQPaymentDelegate)?
  final public var presentationStyle: UIKit.UIModalPresentationStyle
  final public var transitionStyle: UIKit.UIModalTransitionStyle
  public init(delegate: some GQPaymentDelegate)
  final public func open(on viewController: UIKit.UIViewController)
  final public func setTheme(color: UIKit.UIColor)
  @objc deinit
}
@_Concurrency.MainActor public protocol GQPaymentDelegate {
  func gqPayment(_ gqPayment: GQPaymentIOSSDKNative.GQPayment, onSuccess data: [Swift.String : Any]?)
  func gqPayment(_ gqPayment: GQPaymentIOSSDKNative.GQPayment, onFailure data: [Swift.String : Any]?, error: any Swift.Error)
  func gqPayment(_ gqPayment: GQPaymentIOSSDKNative.GQPayment, onCancel data: [Swift.String : Any]?)
}
extension UIKit.UIColor {
  @nonobjc public static let red991F2C: UIKit.UIColor
}
